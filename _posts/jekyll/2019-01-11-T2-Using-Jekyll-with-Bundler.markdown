---
layout: post
title:  "Using Jekyll with Bundler"
date:   2019-01-11 10:00:00 +0900
categories: category jekyll
tags: jekyll, bundler
toc: true
original_url: 'https://jekyllrb.com/tutorials/using-jekyll-with-bundler/'
---

### Initialize Bundler
Ruby와 Bundler가 이미 설치되어 있어야 한다.
새로운 디렉토리를 생성 후 새로운 Bundler 프로젝트를 생성(bundle init)한다:
```sh
mkdir my-jekyll-website
cd my-jekyll-website
bundle init # 현재 디렉토리에 Gemfile생성
```
Gemfile만 생성됨.

### Configure Bundler
다른 gems과 충돌나지 않도록, 격리된 환경에서 dependencies를 설치하기 위해 경로를 `./vendor/bundle`로 설정한다.
이 단계를 건너뛰면, bundle은 dependencies를 global하게 설치한다.
--path: gem을 설치할 경로를 설정한다.:

```sh
bundle install --path vendor/bundle
```

Genfile.lock, .bundle/, .bundle/config, vendor\bundle\ruby\2.5.0 생성됨.

### 설치된 bundle 목록

```sh
bundle list
Gems included by the bundle:
  * bundler (1.17.3)
```
설치된 bundle 경로 확인:
```sh
bundle list --paths
```

### Add Jekyll
Jekyll과 관련된 dependencies를 설치한다.
위에서 Bundler 환경설정에 의해 `./vendor/bundle/`에 설치가 되며, Gemfile에 Jekyll gem이 추가된다.:
```sh
bundle add jekyll
```
확인(bundle list):
```sh
F:\Jekyll\blog\my-jekyll-website>bundle list
Gems included by the bundle:
  * addressable (2.5.2)
  * bundler (1.17.3)
  * colorator (1.1.0)
  * concurrent-ruby (1.1.4)
  * em-websocket (0.5.1)
  * eventmachine (1.2.7)
  * ffi (1.10.0)
  * forwardable-extended (2.6.0)
  * http_parser.rb (0.6.0)
  * i18n (0.9.5)
  * jekyll (3.8.5)
  * jekyll-sass-converter (1.5.2)
  * jekyll-watch (2.1.2)
  * kramdown (1.17.0)
  * liquid (4.0.1)
  * listen (3.1.5)
  * mercenary (0.3.6)
  * pathutil (0.16.2)
  * public_suffix (3.0.3)
  * rb-fsevent (0.10.3)
  * rb-inotify (0.10.0)
  * rouge (3.3.0)
  * ruby_dep (1.5.0)
  * safe_yaml (1.0.4)
  * sass (3.7.3)
  * sass-listen (4.0.0)
F:\Jekyll\blog\my-jekyll-website>bundle list --paths
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/addressable-2.5.2
F:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/bundler-1.17.3/lib/gems/bundler-1.17.3
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/colorator-1.1.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/concurrent-ruby-1.1.4
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/em-websocket-0.5.1
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/eventmachine-1.2.7-x64-mingw32
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/ffi-1.10.0-x64-mingw32
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/forwardable-extended-2.6.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/http_parser.rb-0.6.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/i18n-0.9.5
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/jekyll-3.8.5
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/jekyll-sass-converter-1.5.2
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/jekyll-watch-2.1.2
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/kramdown-1.17.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/liquid-4.0.1
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/listen-3.1.5
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/mercenary-0.3.6
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/pathutil-0.16.2
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/public_suffix-3.0.3
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/rb-fsevent-0.10.3
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/rb-inotify-0.10.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/rouge-3.3.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/ruby_dep-1.5.0
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/safe_yaml-1.0.4
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/sass-3.7.3
F:/Jekyll/blog/my-jekyll-website/vendor/bundle/ruby/2.5.0/gems/sass-listen-4.0.0
```


### Create A Jekyll Scaffold
이제 이미 Jekyll은 설치되었고, 이제 Jekyll 프로젝트를 생성한다:
```sh
bundle exec jekyll new --force --skip-bundle .
  # --force: 현재 폴더가 비어 있지 않기 때문에, 에러나므로 필요함(이미 Bundler 파일이 있으므로)
  # --skip-bundle: skip 'bundle install'.
```
index.md, about.md, 404.html, _config.yml, _post/ 등이 생성됨.

만약, Gemfile이 이미 존재한다면, Jekyll이 혼란을 일으키므로, bundle install을 따로 실행시킨다:
```sh
bundle install
```
몇개의 bundle 들이 추가로 설치됨.


### Serve the Site
bundle exec를 통해 bundler는 프로젝트 폴더에 설치된 jekyll을 구동시킨다:
```sh
bundle exec jekyll serve
```


### Commit to Source Control
버전 콘트롤을 위해서 .gitignore파일을 아래와 같이 설정한다:
```sh
# Ignore folders generated by Bundler
vendor
.bundle

# Ignore folders generated by Jekyll
.sass-cache
_site
```
